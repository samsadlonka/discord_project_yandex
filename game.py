import math
import random
from enum import Enum
from collections import Counter
import asyncio

import discord

from func import parseMessage, isDM, Colours, n_from_arg, PICTURES_URLS

commands = ["join", "leave", "start", "choose", "purge", "why", "who"]


class State(Enum):
    START = 1
    ROUNDSLEEP = 2
    ROUNDPURGE = 3
    END = 4


class Win(Enum):
    VILLAGERS = 1
    MAFIA = 2


class Game:
    lock = None
    bot = None
    guild = None
    channel = None

    minPlayers = 5
    maxPlayers = 13

    # Game Object Methods
    def __init__(self, message, waiting_channel):
        self.lock = asyncio.Lock()
        self.maxPlayers = 13

        self.channel = message.channel
        self.guild = message.guild
        self.voice_waiting_channel_id = 833781149632823297
        #self.waiting_channel = waiting_channel

        self.prefix = '!'
        self.start_message_id = None
        self.vote_message_id = None
        self.mafia_vote_message_id = None
        self.doctor_vote_message_id = None
        self.detective_vote_message_id = None
        self.emoji = '0Ô∏è‚É£ 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£ 4Ô∏è‚É£ 5Ô∏è‚É£ 6Ô∏è‚É£ 7Ô∏è‚É£ 8Ô∏è‚É£ 9Ô∏è‚É£ üîü üÖ∞Ô∏è üÖ±Ô∏è'.split(' ')
        self.skip_emoji = 'üö´'
        self.dict_emoji_to_user = {}

        random.seed()

        self.setInitialState()

    def setInitialState(self):
        self.mafiaChannel = None
        self.voice_channel = None
        self.players = []
        self.villagers = []
        self.mafia = []
        self.doctor = None
        self.detective = None
        self.round = 1
        self.mafiaChoose = {}
        self.roundKill = None
        self.roundKillSkip = None
        self.roundSave = None
        self.lastRoundSave = None
        self.roundDetect = None
        self.roundPurge = {}
        self.state = State.START

    async def destroy(self):
        await self.remove_mafia_channel()

    async def launch(self, message):
        mess = await message.channel.send(
            embed=discord.Embed(
                title="Mafia :dagger:",
                description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ—Ä–µ–≤–Ω—é –î–∞–ª—ë–∫–æ–µ –æ–±—ã—á–Ω–æ —ç—Ç–æ–æ —Å–ø–æ–∫–æ–π–Ω–æ–µ –º–µ—Å—Ç–æ, –Ω–æ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è "
                            "–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ-—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –ø–æ –Ω–æ—á–∞–º.\n\n""–ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ –Ω–∞–ø–∏—à–∏ '{0}join', "
                            "–¥–∞–ª–µ–µ '{0}start', –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç —Ö–æ—Ç—è –±—ã {1} –∏–≥—Ä–æ–∫–æ–≤.\n\n"
                            "–ß—Ç–æ–±—ã –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏ '{0}leave'.".format(self.prefix, self.minPlayers),
                colour=Colours.DARK_RED,
            )
        )
        self.start_message_id = mess.id
        await mess.add_reaction('‚úÖ')

    async def on_voice_state_update(self, member, before, after):
        if not after.channel:
            await self.leave_game(member)
        elif before.channel and before.channel.id != self.voice_waiting_channel_id and \
                before.channel.id != after.channel.id:
            await self.leave_game(member)

    async def on_reaction_add(self, reaction, user):
        async with self.lock:
            if reaction.message.id == self.start_message_id and self.state == State.START:
                await self.join_in_game(user)

            elif reaction.message.id == self.vote_message_id and self.state == State.ROUNDPURGE:
                await self.vote_in_purge(user, reaction)

            if self.state == State.ROUNDSLEEP:
                if reaction.message.id == self.mafia_vote_message_id:
                    await self.mafia_choose(reaction=reaction, user=user)

                elif reaction.message.id == self.doctor_vote_message_id:
                    await self.doctor_choose(reaction=reaction, user=user)

                elif reaction.message.id == self.detective_vote_message_id:
                    await self.detective_choose(reaction=reaction, user=user)

                await self.test_round_continue()

    async def on_reaction_remove(self, reaction, user):
        async with self.lock:
            if reaction.message.id == self.start_message_id:
                await self.leave_game(user)

            elif reaction.message.id == self.vote_message_id and self.state == State.ROUNDPURGE:
                await self.remove_vote_in_purge(user, reaction)

    async def join_in_game(self, user):
        if self.user_in_game(user.id):
            await self.channel.send("–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ!")

        elif user.voice and user.voice.channel.id == self.voice_waiting_channel_id:
            try:
                embed = discord.Embed(
                    description="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ—Ä–µ–≤–Ω—é –î–∞–ª—ë–∫—É—é, –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —ç—Ç–æ –º–µ—Å—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è\n\n"
                                "–í–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–¥–µ—Å—å, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–∫–∏–Ω—É—Ç—å "
                                "–∏–≥—Ä—É –Ω–∞–ø–∏—à–∏ '{}leave'–≤ —á–∞—Ç –∏–≥—Ä—ã..".format(self.prefix),
                    colour=Colours.DARK_BLUE,
                )
                await user.send(embed=embed)

                self.players.append(user)
                if len(self.players) < self.minPlayers:
                    l = "{} –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ {}".format(
                        len(self.players), self.minPlayers
                    )
                else:
                    l = "{} –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö{}".format(
                        len(self.players), self.maxPlayers
                    )
                await self.channel.send(
                    "{} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è ({})".format(user.mention, l)
                )

            except discord.errors.Forbidden:
                await self.channel.send(
                    "{0.mention} —É –≤–∞—Å –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ—ç—Ç–æ–º—É —è –Ω–µ –º–æ–≥—É –ø–∏—Å–∞—Ç—å –≤–∞–º :cry:".format(
                        user
                    )
                )
        else:
            await self.channel.send('–ß—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –∏–≥—Ä—É, –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É "–û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä—ã"')

    async def leave_game(self, user):
        if user in self.players:
            await self.channel.send(
                "{} –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É".format(user.mention)
            )

            if self.state in [State.ROUNDSLEEP, State.ROUNDPURGE]:
                await self.kill(user)
                win = self.check_win_conditions()

                if win:
                    await self.end_game(win)

            else:
                self.players.remove(user)

    async def vote_in_purge(self, user, reaction):
        if user in self.players:
            if user.id not in self.roundPurge:
                if reaction.emoji == self.skip_emoji:
                    await self.skip_vote(user)
                else:
                    self.roundPurge[user.id] = self.dict_emoji_to_user[reaction.emoji]
                    left = len(self.players) - len(self.roundPurge)
                    await self.channel.send(
                        "{0.mention} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ {1.display_name} - {2} –µ—â—ë –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏".format(
                            user, self.dict_emoji_to_user[reaction.emoji], left
                        )
                    )
            else:
                # –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —á—Ç–æ —É–¥–∞–ª—è–µ—Ç—Å—è –≤—Ç–æ—Ä–∞—è —Ä–µ–∞–∫—Ü–∏—è
                self.roundPurge[user.id] = [self.roundPurge[user.id], 2]
                await reaction.remove(user)
                await self.channel.send(
                    "{0.mention} –≤—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –°–Ω–∞—á–∞–ª–∞ —É–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞".format(
                        user
                    )
                )

            if len(self.roundPurge) == len(self.players):
                await self.purge()

    async def remove_vote_in_purge(self, user, reaction):
        print(self.roundPurge[user.id])
        if user in self.players and self.roundPurge[user.id]:
            if type(self.roundPurge[user.id]) == list:
                self.roundPurge[user.id] = self.roundPurge[user.id][0]
            else:
                del self.roundPurge[user.id]
                await self.channel.send(f"{user.mention} –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ —Å–≤–æ–π –≥–æ–ª–æ—Å!")

    async def mafia_choose(self, message=None, reaction=None, user=None):
        if message:
            command, args = parseMessage(message, self.prefix)

            choose_n = n_from_arg(args)

            if choose_n is False:
                await message.channel.send(
                    "–ù–µ –ø–æ–Ω—è–ª —Ç–≤–æ–π –≤—ã–±–æ—Ä - {}".format(
                        message.author.mention)
                )

            elif message.author.id not in self.mafiaChoose and choose_n is not False:
                if (choose_n < 0) or (choose_n >= len(self.players)):
                    await self.mafiaChannel.send(
                        "–ù–µ –ø–æ–Ω—è–ª —Ç–≤–æ–π –≤—ã–±–æ—Ä - {}".format(
                            message.author.mention
                        )
                    )
                else:
                    self.mafiaChoose[message.author.id] = self.players[choose_n]
                    await self.mafiaChannel.send(
                        "–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç - {}".format(message.author.mention)
                    )
            elif message.author.id in self.mafiaChoose:
                await self.mafiaChannel.send(
                    "{} –í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–∏–ª–∏!".format(message.author.mention)
                )

        elif reaction:
            if user.id not in self.mafiaChoose:
                self.mafiaChoose[user.id] = self.dict_emoji_to_user[reaction.emoji]
                await self.mafiaChannel.send(
                    "–í—ã–±–æ—Ä –ø—Ä–∏–Ω—è—Ç - {}".format(user.mention))
            else:
                await self.mafiaChannel.send(
                    "{} –í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏!".format(user.mention))

        await self.all_mafia_voted_check()

    async def all_mafia_voted_check(self):
        if len(self.mafiaChoose) == len(self.mafia):
            chosen_user, count = Counter(self.mafiaChoose.values()).most_common(1)[0]
            if count >= (math.floor(len(self.mafia) / 2) + 1):
                self.roundKill = chosen_user
                await self.mafiaChannel.send(
                    "{} –±—É–¥–µ—Ç —É–±–∏—Ç".format(
                        self.roundKill.display_name
                    )
                )
            else:
                await self.mafiaChannel.send(
                    "–í—ã –Ω–µ –ø—Ä–∏—à–ª–∏ –∫ –µ–¥–∏–Ω–æ–º—É –º–Ω–µ–Ω–∏—é, –ø–æ—ç—Ç–æ–º—É –Ω–∏–∫–æ–≥–æ –Ω–µ —É–±—å—é—Ç –≤ —ç—Ç—É –Ω–æ—á—å."
                )
                self.roundKillSkip = True

    async def doctor_choose(self, message=None, reaction=None, user=None):
        if message:
            command, args = parseMessage(message, self.prefix)
            choose_n = n_from_arg(args)

            if choose_n is not False and ((choose_n >= 0) and (choose_n < len(self.players))):
                save = self.players[choose_n]
                if save != self.lastRoundSave:
                    self.roundSave = save
                    await message.channel.send(
                        "–í—ã–±–æ—Ä –∑–∞—â–∏—Ç–∞–Ω - {} –±—É–¥–µ—Ç –≤—ã–ª–µ—á–µ–Ω".format(
                            self.roundSave.display_name
                        )
                    )

                else:
                    await message.channel.send(
                        "–ù–µ–ª—å–∑—è –≤—ã–±–∏—Ä–∞—Ç—å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —á–µ–ª–æ–≤–µ–∫–∞ 2 –Ω–æ—á–∏ –ø–æ–¥—Ä—è–¥!"
                    )
            else:
                await message.channel.send("–≠—Ç–æ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!")
        elif reaction:
            save = self.dict_emoji_to_user[reaction.emoji]
            if save != self.lastRoundSave:
                self.roundSave = save
                await user.send(
                    "–í—ã–±–æ—Ä –∑–∞—â–∏—Ç–∞–Ω - {} –±—É–¥–µ—Ç –≤—ã–ª–µ—á–µ–Ω".format(
                        self.roundSave.display_name))
            else:
                await user.send("–ù–µ–ª—å–∑—è –≤—ã–±–∏—Ä–∞—Ç—å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —á–µ–ª–æ–≤–µ–∫–∞ 2 –Ω–æ—á–∏ –ø–æ–¥—Ä—è–¥!")

    async def detective_choose(self, message=None, reaction=None, user=None):
        if message:
            command, args = parseMessage(message, self.prefix)
            choose_n = n_from_arg(args)

            if choose_n is not False and ((choose_n >= 0) and (choose_n < len(self.players))):
                self.roundDetect = self.players[choose_n]
                await message.channel.send(
                    "–í—ã–±–æ—Ä –∑–∞—â–∏—Ç–∞–Ω - {} –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω".format(
                        self.roundDetect.display_name
                    )
                )
            else:
                await message.channel.send("–≠—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!")
        elif reaction:
            if not self.roundDetect:
                self.roundDetect = self.dict_emoji_to_user[reaction.emoji]
                user.send("–í—ã–±–æ—Ä –∑–∞—â–∏—Ç–∞–Ω - {} –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω".format(
                    self.roundDetect.display_name))
            else:
                await user.send('–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ!')

    async def skip_vote(self, user):
        if user in self.players:
            self.roundPurge[user.id] = False

            await self.channel.send(
                "{} –≤–æ–∑–¥–µ—Ä–∂–∞–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è - {} –µ—â—ë –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏".format(
                    user.mention, len(self.players) - len(self.roundPurge)
                )
            )

    async def on_message(self, message):
        async with self.lock:
            # TODO: split this into separate functions!
            command, args = parseMessage(message, self.prefix)

            if (
                    command == "join"
                    and message.channel == self.channel
                    and self.state == State.START
            ):
                await self.join_in_game(message.author)

            elif command == "leave" and message.channel == self.channel:
                await self.leave_game(message.author)

            elif (
                    command == "start"
                    and message.channel == self.channel
                    and self.state == State.START
            ):
                if message.author in self.players and message.channel == self.channel:
                    # DEBUG
                    # if len(self.players) < self.minPlayers:
                    #     await self.channel.send(
                    #         "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ - ({} –∏–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö {})".format(
                    #             len(self.players), self.minPlayers
                    #         )
                    #     )
                    #
                    # else:
                    await self.start_game()

            elif command == "choose" and self.state == State.ROUNDSLEEP:
                if message.author in self.mafia and message.channel == self.mafiaChannel:
                    await self.mafia_choose(message=message)

                elif message.author == self.doctor and isDM(message):
                    await self.doctor_choose(message=message)

                elif message.author == self.detective and isDM(message):
                    await self.detective_choose(message=message)

                await self.test_round_continue()

            elif (
                    command == "accuse"
                    and message.channel == self.channel
                    and self.state == State.ROUNDPURGE
            ):
                if message.author in self.players:
                    if message.mentions and (len(message.mentions) == 1):
                        if message.mentions[0] in self.players:
                            self.roundPurge[message.author.id] = message.mentions[0]
                            left = len(self.players) - len(self.roundPurge)
                            await message.channel.send(
                                "{0.mention} accused {1.display_name} - {2} left to decide".format(
                                    message.author, message.mentions[0], left
                                )
                            )

                            if len(self.roundPurge) == len(self.players):
                                await self.purge()

                        else:
                            await self.channel.send(
                                "{0.mention} –Ω–µ –≤ –∏–≥—Ä–µ!".format(
                                    message.mentions[0]
                                )
                            )
                    else:
                        await self.channel.send(
                            "{0.mention} - —ç—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä".format(
                                message.author
                            )
                        )

            elif (
                    command == "skip"
                    and message.channel == self.channel
                    and self.state == State.ROUNDPURGE
            ):
                await self.skip_vote(message.author)

                if len(self.roundPurge) == len(self.players):
                    await self.purge()

            elif command == "restart" and self.state == State.END:
                self.setInitialState()
                await self.launch(message)

            elif command == "why" and message.channel == self.channel:
                if self.state == State.START:
                    if len(self.players) < self.minPlayers:
                        await self.channel.send(
                            embed=discord.Embed(
                                description="–Ø –∂–¥—É –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, –Ω–∞–ø–∏—à–∏—Ç–µ `{0}join`, —á—Ç–æ–±—ã "
                                            "–ø—Ä—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ".format(self.prefix), colour=Colours.BLUE, )
                        )

                    else:
                        await self.channel.send(
                            embed=discord.Embed(
                                description="–Ø –∂–¥—É –ø–æ–∫–∞ –∫—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞—á–Ω–µ—Ç –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏—Ç–µ `{0}start`, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ "
                                            "–≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å ".format(self.prefix), colour=Colours.BLUE, )
                        )

                elif self.state == State.ROUNDSLEEP:
                    waiting = []

                    if not (self.roundKill or self.roundKillSkip):
                        waiting.append("–ú–∞—Ñ–∏—è")

                    if self.doctor and not self.roundSave:
                        waiting.append("–í—Ä–∞—á")

                    if self.detective and not self.roundDetect:
                        waiting.append("–î–µ—Ç–µ–∫—Ç–∏–≤")

                    await self.channel.send(
                        embed=discord.Embed(
                            description="–Ø –∂–¥—É –ø–æ–∫–∞ —Å–¥–µ–ª–∞—é—Ç —Å–≤–æ–π –≤—ã–±–æ—Ä: {}".format(
                                ", ".join(waiting)
                            ),
                            colour=Colours.BLUE,
                        )
                    )

                elif self.state == State.ROUNDPURGE:
                    remaining = len(self.players) - len(self.roundPurge)
                    players = ", ".join(
                        [
                            "{0.mention}".format(p)
                            for p in self.players
                            if p.id not in self.roundPurge
                        ]
                    )
                    plural = "–∏–≥—Ä–æ–∫–æ–≤" if remaining > 1 else "–∏–≥—Ä–æ–∫"

                    await self.channel.send(
                        embed=discord.Embed(
                            description="–ï—â—ë –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ - {0} {1}, –∞ –∏–º–µ–Ω–Ω–æ ({2})".format(
                                remaining, plural, players
                            ),
                            colour=Colours.BLUE,
                        )
                    )

                elif self.state == State.END:
                    await self.channel.send(
                        embed=discord.Embed(
                            description="–ò–≥—Ä–∞ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–∞–ø–∏—à–∏ `{0}restart` –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã".format(
                                self.prefix
                            ),
                            colour=Colours.BLUE,
                        )
                    )

            elif command == "who" and self.state in [
                State.START,
                State.ROUNDSLEEP,
                State.ROUNDPURGE,
            ]:
                if len(self.players) > 0:
                    players = " ".join(["{0.mention}".format(m) for m in self.players])
                    await self.channel.send(
                        embed=discord.Embed(
                            description="{} –≤ –∏–≥—Ä–µ".format(players),
                            color=Colours.DARK_BLUE,
                        )
                    )

                else:
                    await self.channel.send(
                        embed=discord.Embed(
                            description="–ï—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç –≤ –∏–≥—Ä–µ",
                            color=Colours.DARK_BLUE,
                        )
                    )

    # Game Helpers
    def check_win_conditions(self):
        if len(self.mafia) >= len(self.villagers):
            return Win.MAFIA
        elif len(self.mafia) == 0:
            return Win.VILLAGERS
        else:
            return False

    def user_in_game(self, uID):
        count = len([u for u in self.players if u.id == uID])
        return count > 0

    def allocate_roles(self):

        nMafia = (
            1 if len(self.players) <= 5 else (math.floor(len(self.players) / 5) + 1)
        )

        random.shuffle(self.players)

        self.mafia = self.players[0:nMafia]
        self.villagers = self.players[nMafia:]

        self.doctor = self.villagers[0]
        self.detective = self.villagers[1] if len(self.players) > 5 else None

        random.shuffle(self.players)

    async def make_voice_channel(self):
        if not self.voice_channel:
            try:
                self.voice_channel = await self.channel.category.create_voice_channel("–≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∏–≥—Ä—ã")
                return True

            except discord.errors.Forbidden:
                await self.channel.send(
                    "–Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"
                    "- –≤—ã —É–¥–∞–ª–∏–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ?")
                await self.end_game()
                return False

    async def remote_voice_channel(self):
        if self.voice_channel:
            await self.voice_channel.delete()
            self.voice_channel = None

    async def add_voice_channel(self):
        try:
            for x in self.players:
                await x.edit(voice_channel=self.voice_channel, mute=False)
        except Exception as e:
            await self.channel.send(
                "–Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É")
            await self.end_game()
            return False

   # async def return_to_waiting(self):
    #    print(self.waiting_channel)
    #    for x in self.players:
    #        await x.edit(voice_channel=self.waiting_channel)

    async def night_voice(self):
        for x in self.players:
            await x.edit(mute=True)

    async def day_voice(self):
        for x in self.players:
            await x.edit(mute=False)

    async def make_mafia_channel(self):
        if not self.mafiaChannel:
            mafiaPermissions = discord.PermissionOverwrite(
                read_messages=True, send_messages=True, add_reactions=False
            )

            overwrites = {
                self.guild.default_role: discord.PermissionOverwrite(
                    read_messages=False
                ),
                self.guild.me: discord.PermissionOverwrite(
                    manage_channels=True,
                    manage_permissions=True,
                    read_messages=True,
                    send_messages=True,
                    embed_links=True,
                ),
            }

            for m in self.mafia:
                overwrites[m] = mafiaPermissions

            try:
                self.mafiaChannel = await self.channel.category.create_text_channel(
                    "the-mafia", overwrites=overwrites
                )
                # self.bot.mafiaChannels[self.mafiaChannel.id] = self.channel.id
                return True

            except discord.errors.Forbidden:
                await self.channel.send(
                    "–Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ —ç—Ç–æ–π "
                    "–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ - –≤—ã —É–¥–∞–ª–∏–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ?")
                await self.end_game()
                return False

    async def remove_mafia_channel(self):
        if self.mafiaChannel:
            # del self.bot.mafiaChannels[self.mafiaChannel.id]
            await self.mafiaChannel.delete()
            self.mafiaChannel = None

    async def remove_from_mafia(self, player):
        self.mafia.remove(player)
        permissions = discord.PermissionOverwrite(
            read_messages=False, send_messages=False
        )
        await self.mafiaChannel.set_permissions(player, overwrite=permissions)

    def make_player_list_embed(self):
        # –í–ê–ñ–ù–û! –ò–º–µ–Ω–Ω–æ —Ç—É—Ç –º—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —é–∑–µ—Ä–∞
        for i in range(len(self.players)):
            self.dict_emoji_to_user[self.emoji[i]] = self.players[i]

        return discord.Embed(
            description="\n".join(
                [
                    "{0} - {1}".format(emoji, user.display_name)
                    for emoji, user in zip(self.emoji, self.players)
                ]
            ) + '\nps: üÖ∞Ô∏è = 11, üÖ±Ô∏è = 12',
            colour=Colours.PURPLE,
        )

    async def kill(self, player, purge=False):
        method = "–≤—ã–±—Ä–∞–Ω" if purge else "—É–±–∏—Ç"

        if player in self.mafia:
            role = "–º–∞—Ñ–∏—è"
            await self.remove_from_mafia(player)

        elif player == self.doctor:
            role = "–≤—Ä–∞—á"
            self.doctor = None
            self.villagers.remove(player)

        elif player == self.detective:
            role = "–¥–µ—Ç–µ–∫—Ç–∏–≤"
            self.detective = None
            self.villagers.remove(player)

        elif player in self.villagers:
            role = "–º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å"
            self.villagers.remove(player)

        else:
            return

        embed = discord.Embed(
            title="{} –±—ã–ª {}!".format(player.display_name, method),
            description="–≠—Ç–æ –±—ã–ª {}".format(role),
            colour=Colours.DARK_RED,
        )
        await self.channel.send(embed=embed)

        self.players.remove(player)

        # win = self.check_win_conditions()
        # if win:
        #     await self.end_game()
        # else:
        #     await self.test_round_continue()

    # Game Flow
    async def start_game(self):
        self.allocate_roles()
        created = await self.make_mafia_channel()
        create_voice = await self.make_voice_channel()
        if created and create_voice:
            await self.add_voice_channel()
            await self.send_intros()
            await self.start_round()

    async def continue_game(self):
        self.lastRoundSave = self.roundSave
        self.mafiaChoose = {}
        self.roundKill = None
        self.roundKillSkip = None
        self.roundSave = None
        self.roundDetect = None
        self.roundPurge = {}

        self.round += 1
        await self.start_round()

    async def end_game(self, win=False):
        self.state = State.END
        #await self.return_to_waiting()
        if win == Win.VILLAGERS:
            winners = " ".join(["{0.mention}".format(m) for m in self.villagers])
            embed = discord.Embed(
                description="–ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ ({}) –ø–æ–±–µ–¥–∏–ª–∏!\n\n"
                            "–ù–∞–ø–∏—à–∏—Ç–µ `{}restart`, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞".format(winners, self.prefix),
                colour=Colours.DARK_GREEN,
            )

        elif win == Win.MAFIA:
            winners = " ".join(["{0.mention}".format(m) for m in self.mafia])
            embed = discord.Embed(
                description="–ú–∞—Ñ–∏—è ({}) –ø–æ–±–µ–¥–∏–ª–∞!\n\n"
                            "Message `{}restart` to play again".format(
                    winners, self.prefix
                ),
                colour=Colours.DARK_RED,
            )

        else:
            embed = discord.Embed(
                description="–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–ª–∞—Å—å –∏–∑-–∑–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–±–ª–µ–º\n\n"
                            "–ù–∞–ø–∏—à–∏—Ç–µ `{}restart`, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É".format(self.prefix),
                colour=Colours.BLUE,
            )

        await self.remove_mafia_channel()
        await self.remote_voice_channel()
        await self.channel.send(embed=embed)

    # Round Flow
    async def start_round(self):
        embed = discord.Embed(
            title="–ù–æ—á—å {}".format(self.round),
            description="–ù–∞—Å—Ç—É–ø–∞–µ—Ç –Ω–æ—á—å, –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –∑–∞—Å—ã–ø–∞—é—Ç",  # make list of these to work through as a story
            colour=Colours.PURPLE,

        )
        embed.set_image(url=PICTURES_URLS['night'])

        await self.night_voice()
        await self.channel.send(embed=embed)
        self.state = State.ROUNDSLEEP
        await self.send_prompts()

    async def send_intros(self):
        mafia = "".join(["{0.mention} ".format(m) for m in self.mafia])
        await self.mafiaChannel.send(
            "{} - –≤—ã –º–∞—Ñ–∏—è –∫–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –±—É–¥–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –Ω–æ–≤—É—é –∂–µ—Ä—Ç–≤—É!".format(
                mafia
            )
        )

        for v in self.villagers:
            if v in self.mafia:
                await v.send(
                    "–í—ã –º–∞—Ñ–∏—è –∏  –∫–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –±—É–¥–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –Ω–æ–≤—É—é –∂–µ—Ä—Ç–≤—É. –ó–∞–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª "
                    "`#the-mafia`, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä.")
            elif v == self.doctor:
                await v.send(
                    "–í—ã –≤—Ä–∞—á –∫–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –±—É–¥–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –æ–¥–Ω–æ–≥–æ –∂–∏—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ª–µ—á–∏—Ç—å. "
                    "–ù–µ–ª—å–∑—è –ª–µ—á–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —á–µ–ª–æ–≤–µ–∫–∞ –¥–≤–µ –Ω–æ—á–∏ –ø–æ–¥—Ä—è–¥.")

            elif v == self.detective:
                await v.send(
                    "–í—ã –¥–µ—Ç–µ–∫—Ç–∏–≤ –∏ –∫–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –±—É–¥–µ—Ç–µ –≤—ã–±–∏—Ä–∞—Ç—å –æ–¥–Ω–æ–≥–æ –∂–∏—Ç–µ–ª—è –∏ –∏—Å–∫–∞—Ç—å —Å—Ä–µ–∑–∏ –Ω–∏—Ö –º–∞—Ñ–∏—é")

            else:
                await v.send(
                    "–í—ã - –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º–∞—Ñ–∏—é.")

    async def mess_add_all_reactions(self, mess):
        for i in range(len(self.players)):
            await mess.add_reaction(self.emoji[i])

    async def send_prompts(self):
        mafia_prompt = "–ù–∞–ø–∏—à–∏—Ç–µ '{0}choose number' (–Ω–∞–ø—Ä–∏–º–µ—Ä '{0}choose 1') –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ " \
                       "—Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —ç–º–æ–¥–∑–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ" \
                       ", —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä–æ–∫–∞, " \
                       "–∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–±–∏—Ç—å) –í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ –∫ —Å–æ–≥–ª–∞—à–µ–Ω–∏—é –≤—Å–µ–π –≥—Ä—É–ø–ø–æ–π, –µ—Å–ª–∏ –Ω–µ—Ç —á–µ—Ç–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞," \
                       "–Ω–∏–∫—Ç–æ –Ω–µ –±—É–¥–µ—Ç —É–±–∏—Ç, –ø–æ—ç—Ç–æ–º—É –≤—ã –º–æ–∂–µ—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –æ–±—Å—É–¥–∏—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä! –û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä –Ω–µ–ª—å–∑—è.".format(
            self.prefix
        )
        doctor_prompt = "–ù–∞–ø–∏—à–∏—Ç–µ`{0}choose number` (–Ω–∞–ø—Ä–∏–º–µ—Ä `{0}choose 1`) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —ç–º–æ–¥–∑–∏ –∏–∑ " \
                        "—Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –¥–ª—è –∏–∑–ª–µ—á–µ–Ω–∏—è." \
                        "–û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä –Ω–µ–ª—å–∑—è!".format(
            self.prefix
        )
        detective_prompt = "–ù–∞–ø–∏—à–∏—Ç–µ `{0}choose number` (–Ω–∞–ø—Ä–∏–º–µ—Ä `{0}choose 1`) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ " \
                           "—ç–º–æ–¥–∑–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä–æ–∫–∞ " \
                           "–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏. –û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä –Ω–µ–ª—å–∑—è!".format(self.prefix)

        embed = self.make_player_list_embed()
        mafia_mess = await self.mafiaChannel.send(mafia_prompt, embed=embed)
        self.mafia_vote_message_id = mafia_mess.id
        await self.mess_add_all_reactions(mafia_mess)

        if self.doctor:
            doctor_mess = await self.doctor.send(doctor_prompt, embed=embed)
            self.doctor_vote_message_id = doctor_mess.id
            await self.mess_add_all_reactions(doctor_mess)
        else:
            self.doctor_vote_message_id = None

        if self.detective:
            detective_mess = await self.detective.send(detective_prompt, embed=embed)
            self.detective_vote_message_id = detective_mess.id
            await self.mess_add_all_reactions(detective_mess)
        else:
            self.detective_vote_message_id = None

    async def test_round_continue(self):
        if (
                (self.state == State.ROUNDSLEEP)
                and (self.roundKill or self.roundKillSkip)
                and (not self.doctor or self.roundSave)
                and (not self.detective or self.roundDetect)
        ):
            await self.summarise_round()

    async def summarise_round(self):
        # turn on micro
        await self.day_voice()

        summary = discord.Embed(
            title="–ü—Ä–æ—Å—ã–ø–∞–µ–º—Å—è",
            description="–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ –∂–∏—Ç–µ–ª–∏ –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å —É–∑–Ω–∞–µ–º, —á—Ç–æ –∂–µ —Å–ª—É—á–∏–ª–æ—Å—å —ç—Ç–æ–π –Ω–æ—á—å—é",
            colour=Colours.PURPLE,
        )
        kill = None

        if self.roundKillSkip:
            summary.add_field(
                name=":person_shrugging:",
                value="–ú–∞—Ñ–∏—è –Ω–∏–∫–æ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª–∞",
                inline=False,
            )
            kill = False

        elif self.roundKill:
            summary.add_field(
                name=":dagger:",
                value="–ú–∞—Ñ–∏—è –≤—ã–±—Ä–∞–ª–∞ —É–±–∏—Ç—å {}".format(self.roundKill.mention),
                inline=False,
            )
            if self.roundSave == self.roundKill:
                summary.add_field(
                    name=":syringe:",
                    value="–í—Ä–∞—á –≤—ã–ª–µ—á–∏–ª –∏–≥—Ä–æ–∫–∞ –≤–æ–≤—Ä–µ–º—è!",
                    inline=False,
                )
                kill = False

            elif self.doctor:
                summary.add_field(
                    name=":skull_crossbones:",
                    value="–í—Ä–∞—á –Ω–µ —Å–º–æ–≥ –≤—ã–ª–µ—á–∏—Ç—å –µ–≥–æ",
                    inline=False,
                )
                kill = True

            else:
                # the doctor has been killed
                kill = True

        if self.detective and self.roundDetect:
            if self.roundDetect in self.mafia:
                summary.add_field(
                    name=":detective:",
                    value="–î–µ—Ç–µ–∫—Ç–∏–≤ –Ω–∞—à—ë–ª –º–∞—Ñ–∏—é",
                    inline=False,
                )
                await self.detective.send(
                    embed=discord.Embed(
                        description="–í–µ—Ä–Ω–æ {} - —ç—Ç–æ –º–∞—Ñ–∏—è !".format(
                            self.roundDetect.display_name
                        ),
                        colour=Colours.DARK_RED,
                    )
                )
            else:
                summary.add_field(
                    name=":detective:",
                    value="–î–µ—Ç–µ–∫—Ç–∏–≤ –Ω–µ –Ω–∞—à—ë–ª –º–∞—Ñ–∏—é",
                    inline=False,
                )
                await self.detective.send(
                    embed=discord.Embed(
                        description="–ù–µ–≤–µ—Ä–Ω–æ {} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Ñ–∏–µ–π!".format(
                            self.roundDetect.display_name
                        ),
                        colour=Colours.DARK_GREEN,
                    )
                )

        await self.channel.send(embed=summary)

        if kill:
            await self.kill(self.roundKill)
            win = self.check_win_conditions()

            if win:
                await self.end_game(win)

        if self.state != State.END:
            await self.move_to_purge()

    async def move_to_purge(self):
        self.state = State.ROUNDPURGE

        if self.roundKillSkip:
            text = "–•–æ—Ç—è –º–∞—Ñ–∏—è –Ω–∏–∫–æ–≥–æ –Ω–µ —É–±–∏–ª–∞ –ø—Ä–æ—à–ª–æ–π –Ω–æ—á—å—é, –∂–∏—Ç–µ–ª–∏ –¥–µ—Ä–µ–≤–Ω–∏ –≤—Å–µ –µ—â–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏, –∏ " \
                   "—Å–æ–±–∏—Ä–∞—é—Ç—Å—è –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è ..."

        elif self.roundKill == self.roundSave:
            text = "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –Ω–∞–∫–∞–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—à–ª–æ–π –Ω–æ—á—å—é, –∂–∏—Ç–µ–ª–∏ –¥–µ—Ä–µ–≤–Ω–∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è, " \
                   "—á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å ...."

        else:
            text = "–í —É–∂–∞—Å–µ –æ—Ç —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—à–ª–æ–π –Ω–æ—á–∏, –∂–∏—Ç–µ–ª–∏ –¥–µ—Ä–µ–≤–Ω–∏ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è, —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å ..."

        left = ["{0.mention}".format(m) for m in self.players]

        embed = discord.Embed(
            description=f"{text}\n\n–ï—Å–ª–∏ –≤—ã –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –∏–≥—Ä–æ–∫—É, —É–ø–æ–º—è–Ω–∏—Ç–µ –µ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É—è c–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç–º–æ–¥–∑–∏, "
                        f"—á—Ç–æ–±—ã –æ–±–≤–∏–Ω–∏—Ç—å –µ–≥–æ –≤ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –º–∞—Ñ–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '{self.prefix} skip' –∏–ª–∏ üö´, "
                        f"—á—Ç–æ–±—ã –º–æ–ª—á–∞—Ç—å(–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥). \n"
                        f"–ü–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ, –ø–æ–ª–æ–≤–∏–Ω–∞ –∂–∏—Ç–µ–ª–µ–π –¥–æ–ª–∂–Ω–∞ –∫–æ–≥–æ-—Ç–æ –æ–±–≤–∏–Ω–∏—Ç—å, —á—Ç–æ–±—ã –∏—Ö –ø—Ä–æ–≤–µ—Ä–∏–ª–∏.\n\n " \
                        + '\n'.join([self.emoji[i] + ' - ' + left[i] for i in range(len(left))]),
            colour=Colours.DARK_ORANGE,
        )

        mess = await self.channel.send(embed=embed)
        self.vote_message_id = mess.id
        for i in range(len(left)):
            await mess.add_reaction(self.emoji[i])
            self.dict_emoji_to_user[self.emoji[i]] = self.players[i]
        await mess.add_reaction(self.skip_emoji)

    async def purge(self):
        most_commons = Counter(self.roundPurge.values()).most_common(len(self.roundPurge))

        if len(most_commons) > 1:
            chosen, count = None, None
        else:
            chosen, count = most_commons[0]

        if chosen and count >= len(self.players) // 2:
            await self.channel.send(
                embed=discord.Embed(
                    description="–ñ–∏—Ç–µ–ª–∏ —Ä–µ—à–∏–ª–∏, —á—Ç–æ {} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω".format(
                        chosen.display_name
                    ),
                    colour=Colours.DARK_RED,
                )
            )

            await self.kill(chosen, True)
            win = self.check_win_conditions()
            print(win)
            if win:
                await self.end_game(win)

            else:
                await self.continue_game()
        else:
            await self.channel.send(
                embed=discord.Embed(
                    description="–ñ–∏—Ç–µ–ª–∏ –Ω–µ –ø—Ä–∏—à–ª–∏ –∫ —Å–æ–≥–ª–∞—Å–∏—é, —Å–µ–≥–æ–¥–Ω—è –Ω–∏–∫—Ç–æ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω",
                    colour=Colours.DARK_GREEN,
                )
            )

            await self.continue_game()
